name: Build whl for all platforms

on:
  workflow_dispatch:

jobs:
  build-pyodide:
    name: Build whl for Pyodide
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: 3.12
        conda-remove-defaults: true
        channels: conda-forge
        channel-priority: true
        activate-environment: choreo
        environment-file: environment/environment-dev.yml

    - name: Read Emscripten version number
      shell: bash -el {0} # Needed whenever the commands need something in conda
      run: |
        echo EMSCRIPTEN_VERSION=$(pyodide config get emscripten_version) >> $GITHUB_ENV

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: ${{ env.EMSCRIPTEN_VERSION }}

    - name: Build for Pyodide
      shell: bash -el {0} # Needed whenever the commands need something in conda
      run: |
        pyodide build

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: pyodide-whl
        path: 'dist/*.whl'
        compression-level: 0

  build-linux:
    name: Build whl for Linux
    needs: build-pyodide
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true

    - name: Download Pyodide whl
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: pyodide-whl
        merge-multiple: true

    - name: Build for Linux
      shell: bash -el {0} # Needed whenever the commands need something in conda
      run: |
        conda create -n build -y
        conda activate build
        conda install python=${{ matrix.python-version }}  
        conda install --file environment/environment-build-linux.txt
        pip install build
        python -m build

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.python-version }}-whl
        path: 'dist/*linux*.whl'
        compression-level: 0

  build-macos:
    name: Build whl for MacOs
    needs: build-pyodide
    runs-on: macos-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true

    - name: Download Pyodide whl
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: pyodide-whl
        merge-multiple: true

    - name: Build for MacOs
      shell: bash -el {0} # Needed whenever the commands need something in conda
      run: |
        conda create -n build -y
        conda activate build
        conda install python=${{ matrix.python-version }}  
        conda install --file environment/environment-build-macos.txt
        pip install build
        python -m build

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-${{ matrix.python-version }}-whl
        path: 'dist/*macos*.whl'
        compression-level: 0

  build-windows:
    name: Build whl for Windows
    needs: build-pyodide
    runs-on: windows-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:

    - name: Install MSVC
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true

    - name: Download Pyodide whl
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: pyodide-whl
        merge-multiple: true

    - name: Build for Windows
      shell: bash -el {0} # Needed whenever the commands need something in conda
      run: |
        conda create -n build -y
        conda activate build
        conda install python=${{ matrix.python-version }}  
        conda install --file environment/environment-build-win.txt
        pip install build
        python -m build

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: win-${{ matrix.python-version }}-whl
        path: 'dist/*win*.whl'
        compression-level: 0

  gather-all-whl:
    name: Gather all built whls
    needs: [build-pyodide, build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:

      - name: Download Pyodide whl
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: all-whls
          path: dist
          compression-level: 0



        




