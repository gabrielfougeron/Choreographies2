name: Unit tests on diverse OS

on: workflow_dispatch 

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        # python-version: ["3.9", "3.10", "3.11"]
        python-version: ["3.11"]
        # os: [ubuntu-22.04, ubuntu-20.04, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest, windows-latest]
    #
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
    # 
    - name: Checkout repository
      uses: actions/checkout@v3
    # 
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge
    #
    # - name: Install common dependencies
    #   run: |
    #     conda install -c conda-forge -y plantuml openmp
    - name: Install python build dependencies
      run: |
        pip install --upgrade pip
        pip install scipy numpy matplotlib sparseqr==1.2 networkx mpmath Cython
    #
    - name: Install dependencies for MacOs
      if: startsWith(matrix.os, 'macos')
      run: |       
        conda install -c conda-forge -y plantuml
        brew install suite-sparse llvm libomp
        echo $CC

        export CC=/usr/local/opt/llvm/bin/clang
        export PATH=/usr/local/opt/llvm/bin:$PATH
        export LDFLAGS=-L/usr/local/opt/llvm/lib
        export CFLAGS=-I/usr/local/opt/llvm/include
        clang --version
        which clang
        echo $CC
    #
    - name: Install dependencies for Windows
      if: startsWith(matrix.os, 'windows')
      run: |
        conda install -c conda-forge -y suitesparse plantuml
        $env:INCLUDE += ';C:\Miniconda\envs\__setup_conda\Library\include\suitesparse'
        $env:PATH += ';C:\Miniconda\envs\__setup_conda\Library\include\suitesparse'
        $env:LIB += ';C:\Miniconda\envs\__setup_conda\Library\include\suitesparse;C:\Miniconda\envs\__setup_conda\Lib\site-packages'
        
        cd "C:\"
        dir
        cd "C:\Users"
        dir
        cd "C:\Users\runneradmin"
        dir
        cd "C:\Users\runneradmin\miniconda3"
        dir
        cd "C:\\Users\runneradmin\miniconda3\envs"
        dir
        cd "C:\Users\runneradmin\miniconda3\envs\__setup_conda"
        dir


        Copy-Item -Path "C:\Miniconda\envs\__setup_conda\Library\include\suitesparse\SuiteSparseQR_C.h" -Destination "C:\Miniconda\envs\__setup_conda\Lib\site-packages\sparseqr\"
        Copy-Item -Path "C:\Miniconda\envs\__setup_conda\Library\include\suitesparse\SuiteSparseQR_C.h" -Destination "C:\Miniconda\envs\__setup_conda\Lib\site-packages"
        Copy-Item -Path "D:\a\choreo\choreo\sparseqr_gen.py" -Destination "C:\Miniconda\envs\__setup_conda\Lib\site-packages\sparseqr\"
    #
    - name: Install dependencies for Ubuntu
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        conda install -c conda-forge -y suitesparse clang plantuml openmp
    # 
    - name: Install run setup.py
      run: |
        python setup.py build_ext --inplace
    - name: Install python build dependencies
      run: |
        pip install --upgrade pip
        pip install .[cli,docs,test,build]
    #
    - name: Run tests
      run: |
        pytest
    #
    - name: Generate Documentation
      run: |
        python setup.py build_ext --inplace
        cd docs
        make html
